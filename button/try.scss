$cWhite: white;
$cBlack: black;

.try {
  & .btn {
    position: relative;
    display: inline-block;
    background-color: $cWhite;
    border: 1px solid $cBlack;
    font-weight: 600;
    padding: 10px 40px;
    margin: 10px auto;
    cursor: pointer;
    transition: all 0.3s;
    color: $cBlack;
    text-decoration: none !important;

    &.float {
      &:hover {
        background-color: $cBlack;
        color: $cWhite;
        box-shadow: 2px 2px 2px 2px green;
      }
    }
    &.filled {
      background-color: $cBlack;
      color: $cWhite;
      box-shadow: 2px 2px 2px 2px green;

      &:hover {
        background-color: $cWhite;
        color: $cBlack;
        box-shadow: none;
      }
    }
    &.letter-spacing {
      &:hover {
        background-color: $cBlack;
        color: $cWhite;
        letter-spacing: 3px;
      }
    }
    &.shadow {
      &:hover {
        transform: translate(-3px, -3px);
        box-shadow: 2px 2px 2px 2px green;
      }
    }
    &.solid {
      box-shadow: 1px 1px 1px 1px green;
      border-radius: 10px;

      &:hover {
        transform: translate(3px, 3px);
        box-shadow: none;
      }
    }
  }
}

//スライドするボタンを作成する
//コツとしては、hoverした時のアニメーションが完成した時の状態を作成すると良い
#container-second {
  text-align: center;
}
.slide {
  & .btn {
    background-color: $cWhite;
    color: $cBlack;
    border: 1px solid $cBlack;
    font-weight: 600;
    padding: 10px 40px;
    margin: 50px auto;
    cursor: pointer;
    transition: all 0.3s;

    &.slide-bg {
      position: relative; //親要素にrelativeを設定しないと、子要素でposition:absoluteで絶対位置を決められない
      overflow: hidden; //枠外にはみ出したものはhidden visibleだと見えるようになる
      z-index: 1; //spanより前に出す

      // & span {
      //   display: inline-block;
      //   width: 100%; //windowの100%を指定しているので、親要素にrelativeがないと、ブラウザいっぱいに広がる
      //   height: 100%;
      //   background-color: $cBlack;
      //   position: absolute; //絶対位置で表示にして、top:0とleft:0で左端に位置させる
      //   top: 0;
      //   left: 0;
      //   transform: translateX(-100%);
      //   transition: transform 0.3s;
      //   z-index: -1; //spanがボタンの文字列より前にきているので背面に設定
      // }

      //spanに変わり擬似要素で同様に作成
      &::before { //要素の最初に表示される afterは後に表示される。ただしHTML要素には一つのみ適応可能 imgなどの空タグには使えない
        content:''; //擬似要素生成には、''を入れないと行けない 'あああ'などでもいい
        display: inline-block;
        width: 100%; //windowの100%を指定しているので、親要素にrelativeがないと、ブラウザいっぱいに広がる
        height: 100%;
        background-color: $cBlack;
        position: absolute; //絶対位置で表示にして、top:0とleft:0で左端に位置させる
        top: 0;
        left: 0;
        transform: translateX(-100%);
        transition: transform 0.3s;
        z-index: -1; //spanがボタンの文字列より前にきているので背面に設定
      }

      &:hover {
        color: $cWhite;
        &::before{
          transform: none;
        }
      }
    }
  }
}
